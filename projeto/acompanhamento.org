# -*- coding: utf-8 -*-
# -*- mode: org -*-
#+STARTUP: overview indent
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport

* Avaliação das Etapas do Projeto de Compilador

| Relatório de Avaliação     |
|----------------------------|
| [[#avaliação-da-etapa-1][Etapa 1]]                    |
| [[#avaliação-da-etapa-2][Etapa 2]]                    |
| [[#avaliação-da-etapa-3][Etapa 3]]                    |
| [[#avaliação-da-etapa-4][Etapa 4]]                    |
| [[#avaliação-da-etapa-5][Etapa 5]]                    |
| [[#avaliação-da-etapa-6][Etapa 6]]                    |
| Etapa 7 (aguarda soluções) |

* Avaliação da Etapa 1
:PROPERTIES:
:CUSTOM_ID: e1
:END:
** Quais testes?

No diretório de cada grupo, o arquivo =src/main.c= e o diretório =tests=
foram substituídos por aqueles oriundos do repositório de referência,
tomando-se por base o commit ac8f5805784.

** LOG dos testes (normal/valgrind)                                 :ATTACH:
:PROPERTIES:
:Attachments: e1.normal.log e1.valgrind.log
:ID:       06163eff-5ddb-4f80-8513-440245038def
:END:

Clique nos links:
- [[./data/06/163eff-5ddb-4f80-8513-440245038def/e1.normal.log]]
- [[./data/06/163eff-5ddb-4f80-8513-440245038def/e1.valgrind.log]]

** Parse arquivos LOG                                             :noexport:

#+name: e1.logtotable
#+begin_src shell :results table
echo "Grupo,E1,Obj"
cat data/06/163eff-5ddb-4f80-8513-440245038def/e1.normal.log | grep -e passed -e failed | sed -e "s/% .*//" -e "s/|/, E1.normal, /"
cat data/06/163eff-5ddb-4f80-8513-440245038def/e1.valgrind.log | grep -e passed -e failed | sed -e "s/% .*//" -e "s/|/, E1.valgrind, /"
#+end_src

#+RESULTS: e1.logtotable
| Grupo   | E1          | Obj |
| Alpha   | E1.normal   |  97 |
| Beta    | E1.normal   |   0 |
| Delta   | E1.normal   |  97 |
| Epsilon | E1.normal   |  97 |
| Gamma   | E1.normal   |  97 |
| Kappa   | E1.normal   |  97 |
| Lambda  | E1.normal   |  97 |
| Nu      | E1.normal   |  97 |
| Omega   | E1.normal   |  97 |
| Omicron | E1.normal   |  94 |
| Phi     | E1.normal   |  97 |
| Psi     | E1.normal   |  96 |
| Rho     | E1.normal   |  97 |
| Sigma   | E1.normal   |  97 |
| Tau     | E1.normal   |  94 |
| Zeta    | E1.normal   |  60 |
| Alpha   | E1.valgrind |  76 |
| Beta    | E1.valgrind | 100 |
| Delta   | E1.valgrind | 100 |
| Epsilon | E1.valgrind |  82 |
| Gamma   | E1.valgrind | 100 |
| Kappa   | E1.valgrind | 100 |
| Lambda  | E1.valgrind |  76 |
| Nu      | E1.valgrind | 100 |
| Omega   | E1.valgrind | 100 |
| Omicron | E1.valgrind | 100 |
| Phi     | E1.valgrind | 100 |
| Psi     | E1.valgrind |  94 |
| Rho     | E1.valgrind | 100 |
| Sigma   | E1.valgrind |  73 |
| Tau     | E1.valgrind |   0 |
| Zeta    | E1.valgrind |  94 |

#+name: e1.r
#+header: :var dep0=e1.logtotable
#+begin_src R :results table :session :exports both :colnames yes
library(tidyr)
dep0 %>%
    mutate(Obj = Obj/10) %>%
    spread(E1, Obj) -> e1.res;
#+end_src

#+RESULTS: e1.r
| ID      | E1.normal | E1.valgrind |
|---------+-----------+-------------|
| Alpha   |       9.7 |         7.6 |
| Beta    |         0 |          10 |
| Delta   |       9.7 |          10 |
| Epsilon |       9.7 |         8.2 |
| Gamma   |       9.7 |          10 |
| Kappa   |       9.7 |          10 |
| Lambda  |       9.7 |         7.6 |
| Nu      |       9.7 |          10 |
| Omega   |       9.7 |          10 |
| Omicron |       9.4 |          10 |
| Phi     |       9.7 |          10 |
| Psi     |       9.6 |         9.4 |
| Rho     |       9.7 |          10 |
| Sigma   |       9.7 |         7.3 |
| Tau     |       9.4 |           0 |
| Zeta    |         6 |         9.4 |

** Subjetivo

#+name: e1.subjetiva.raw
| Grupo   | Subjetiva |
|---------+-----------|
| Phi     |        10 |
| Delta   |         7 |
| Epsilon |         8 |
| Zeta    |         7 |
| Psi     |         8 |
| Gamma   |        10 |
| Beta    |        10 |
| Sigma   |         8 |
| Omega   |        10 |
| Rho     |         6 |
| Omicron |        10 |
| Nu      |        10 |
| Lambda  |        10 |
| Kappa   |         6 |
| Alpha   |        10 |
| Tau     |         8 |

** Objetivo + Subjetivo + Final

#+header: :var dep0=e1.r
#+header: :var e1.sub=e1.subjetiva.raw
#+begin_src R :results table :session :exports output :colnames yes
e1.res %>%
    left_join(e1.sub) %>%
    mutate(E1.final = (E1.normal + Subjetiva) / 2)
#+end_src

#+RESULTS:
| Grupo   | E1.normal | E1.valgrind | Subjetiva | E1.final |
|---------+-----------+-------------+-----------+----------|
| Alpha   |        10 |         7.6 |        10 |       10 |
| Beta    |        10 |          10 |        10 |       10 |
| Delta   |       9.7 |          10 |         7 |     8.35 |
| Epsilon |        10 |         8.2 |         8 |        9 |
| Gamma   |        10 |          10 |        10 |       10 |
| Kappa   |        10 |          10 |         6 |        8 |
| Lambda  |        10 |         7.6 |        10 |       10 |
| Nu      |        10 |          10 |        10 |       10 |
| Omega   |        10 |          10 |        10 |       10 |
| Omicron |        10 |          10 |        10 |       10 |
| Phi     |        10 |          10 |        10 |       10 |
| Psi     |        10 |         9.4 |         8 |        9 |
| Rho     |        10 |          10 |         6 |        8 |
| Sigma   |        10 |         7.3 |         8 |        9 |
| Tau     |       9.6 |           0 |         8 |      8.8 |
| Zeta    |         6 |         9.4 |         7 |      6.5 |

** Comentários por grupo

Apenas para alguns grupos.

*** Delta

- tiveram problemas técnicos com MV
- não tem os pipes, não tem o ., tem $ (não deveria ter)
  - tem o ponto na ER, mas não acha

*** Epsilon

- Problema de clonar, sem acesso, resolvido agora

*** Psi

- Fez comentário multilinha com ER e manual
  - Mas não é robusto o suficiente
- O dólar não fazia parte da espec, mas colocaram

*** Zeta

- Não fizeram o comentário multilinha (tatiane se desculpa para a camila)
- Falta de conhecimento de C para declaração de variáveis globais
- O int não funciona, por que não usaram corretamente os nomes
*** Sigma

- $ não gera =TOKEN_ERRO= (faltou linha que captura tudo)
- %>% %|% não são reconhecidos
*** Rho

- Nos compostos novos, o return está errado
  - Corrigido na entrevista
- Comentário multilinha
- LETTER não utilizado; DIGIT utilizado
  - Confusão com COMMENT vs DIGIT

Sugestão:
- Sorteio antes
*** Kappa

- Evolui o multilinha da ER até o por estado
- ., $, %>%, %|% não estão de acordo com a espec
- Partiu de uma solução já existente
* Avaliação da Etapa 2
:PROPERTIES:
:CUSTOM_ID: e2
:END:
** Quais testes?

No diretório de cada grupo, o arquivo =src/main.c= e o diretório =tests=
foram substituídos por aqueles oriundos do repositório de referência,
tomando-se por base o commit b9a3b4a.

** LOG dos testes (normal/valgrind)                                 :ATTACH:
:PROPERTIES:
:Attachments: e2.normal.log e2.valgrind.log
:ID:       fc489a17-64e8-4335-9a0c-352612d2cf3f
:END:

Clique nos links:
- [[./data/fc/489a17-64e8-4335-9a0c-352612d2cf3f/e2.normal.log]]
- [[./data/fc/489a17-64e8-4335-9a0c-352612d2cf3f/e2.valgrind.log]]

#+name: e2.logtotable
#+begin_src shell :results table
echo "Grupo,E2,Obj"
cat data/fc/489a17-64e8-4335-9a0c-352612d2cf3f/e2.normal.log | grep -e passed -e failed | sed -e "s/% .*//" -e "s/|/, E2.normal, /"
cat data/fc/489a17-64e8-4335-9a0c-352612d2cf3f/e2.valgrind.log | grep -e passed -e failed | sed -e "s/% .*//" -e "s/|/, E2.valgrind, /"
#+end_src

#+RESULTS: e2.logtotable
| Grupo   | E2          | Obj |
| Alpha   | E2.normal   |  80 |
| Beta    | E2.normal   |  77 |
| Delta   | E2.normal   |  93 |
| Epsilon | E2.normal   |  93 |
| Gamma   | E2.normal   |  88 |
| Kappa   | E2.normal   |  87 |
| Lambda  | E2.normal   |  84 |
| Nu      | E2.normal   |  70 |
| Omega   | E2.normal   |  95 |
| Omicron | E2.normal   |  94 |
| Phi     | E2.normal   |  84 |
| Psi     | E2.normal   |  87 |
| Rho     | E2.normal   |  87 |
| Sigma   | E2.normal   |  86 |
| Tau     | E2.normal   |  94 |
| Zeta    | E2.normal   |  67 |
| Alpha   | E2.valgrind |  32 |
| Beta    | E2.valgrind |  48 |
| Delta   | E2.valgrind |  32 |
| Epsilon | E2.valgrind |  32 |
| Gamma   | E2.valgrind |  32 |
| Kappa   | E2.valgrind |  67 |
| Lambda  | E2.valgrind |  32 |
| Nu      | E2.valgrind |  67 |
| Omega   | E2.valgrind |  67 |
| Omicron | E2.valgrind |  32 |
| Phi     | E2.valgrind |  67 |
| Psi     | E2.valgrind |  32 |
| Rho     | E2.valgrind |  67 |
| Sigma   | E2.valgrind |  32 |
| Tau     | E2.valgrind |  33 |
| Zeta    | E2.valgrind |  32 |

#+name: e2.r
#+header: :var dep0=e2.logtotable
#+begin_src R :results table :session :exports both :colnames yes
library(tidyr)
dep0 %>%
    mutate(Obj = Obj/10) %>%
    spread(E2, Obj) -> e2.res;
#+end_src

#+RESULTS: e2.r
| ID      | E2.normal | E2.valgrind |
|---------+-----------+-------------|
| Alpha   |         8 |         3.2 |
| Beta    |       7.7 |         4.8 |
| Delta   |       9.3 |         3.2 |
| Epsilon |       9.3 |         3.2 |
| Gamma   |       8.8 |         3.2 |
| Kappa   |       8.7 |         6.7 |
| Lambda  |       8.4 |         3.2 |
| Nu      |         7 |         6.7 |
| Omega   |       9.5 |         6.7 |
| Omicron |       9.4 |         3.2 |
| Phi     |       8.4 |         6.7 |
| Psi     |       8.7 |         3.2 |
| Rho     |       8.7 |         6.7 |
| Sigma   |       8.6 |         3.2 |
| Tau     |       9.4 |         3.3 |
| Zeta    |       6.7 |         3.2 |

** Subjetivo

#+name: e2.subjetiva.raw
| Grupo   | Subjetiva |
|---------+-----------|
| Phi     |       9.5 |
| Delta   |         8 |
| Epsilon |        10 |
| Zeta    |         7 |
| Psi     |        10 |
| Gamma   |       9.5 |
| Beta    |         9 |
| Sigma   |         9 |
| Omega   |       9.5 |
| Rho     |         8 |
| Omicron |         7 |
| Nu      |        10 |
| Lambda  |         9 |
| Kappa   |        10 |
| Alpha   |        10 |
| Tau     |        10 |

** Objetivo + Subjetivo + Final

#+header: :var dep0=e2.r
#+header: :var e2.sub=e2.subjetiva.raw
#+begin_src R :results table :session :exports output :colnames yes
e2.res %>%
    left_join(e2.sub) %>%
    mutate(E2.final = (E2.normal + Subjetiva) / 2)
#+end_src

#+RESULTS:
| Grupo   | E2.normal | E2.valgrind | Subjetiva | E2.final |
|---------+-----------+-------------+-----------+----------|
| Alpha   |       8.2 |         3.2 |        10 |      9.1 |
| Beta    |       8.8 |         4.8 |         9 |      8.9 |
| Delta   |       8.6 |         3.2 |         8 |      8.3 |
| Epsilon |       8.9 |         3.2 |        10 |     9.45 |
| Gamma   |       8.7 |         3.2 |       9.5 |      9.1 |
| Kappa   |       9.9 |         6.7 |        10 |     9.95 |
| Lambda  |       9.7 |         3.2 |         9 |     9.35 |
| Nu      |       8.1 |         6.7 |        10 |     9.05 |
| Omega   |       9.1 |         6.7 |       9.5 |      9.3 |
| Omicron |         9 |         3.2 |         7 |        8 |
| Phi     |       8.2 |         6.7 |       9.5 |     8.85 |
| Psi     |       8.5 |         3.2 |        10 |     9.25 |
| Rho     |       8.6 |         6.7 |         8 |      8.3 |
| Sigma   |       8.1 |         3.2 |         9 |     8.55 |
| Tau     |         9 |         3.3 |        10 |      9.5 |
| Zeta    |       6.8 |         3.2 |         7 |      6.9 |
** Comentários por grupo

Por fornecer.
* Avaliação da Etapa 3
** Método

A avaliação =Subjetiva= foi baseada unicamente na entrevista, enquanto
que a =Subjetivo.2= foi calculada principalmente baseada em uma análise
de código submetido pelo grupo e na verificação se o programa compila.

** Tabela de análise =Subjetivo.2=

| Critério                 | Peso |
|--------------------------+------|
| Ausência de conflitos    |    1 |
| Implementar programas    |    1 |
| Programa (lista funções) |    1 |
| Função (lista comandos)  |    1 |
| Ifelse                   |    1 |
| Dowhile                  |    1 |
| Atribuição               |    1 |
| Retorno                  |    1 |
| Expressões Binárias      |    1 |
| Expressões Unárias       |    1 |
| Vetor indexado           |    1 |
| Chamada de função        |    1 |

** Subjetiva + Subjetivo.2 + Final

| Grupo   | Subjetiva | Subjetivo.2 | Final |
|---------+-----------+-------------+-------|
| Kappa   |        10 |          10 |    10 |
| Epsilon |        10 |          10 |    10 |
| Phi     |        10 |          10 |    10 |
| Nu      |        10 |        9.83 |  9.91 |
| Omega   |        10 |        9.17 |  9.59 |
| Alpha   |         9 |          10 |   9.5 |
| Sigma   |         9 |          10 |   9.5 |
| Beta    |        10 |           9 |   9.5 |
| Lambda  |         0 |          10 |     8 |
| Omicron |         0 |        9.42 |  7.54 |
| Psi     |         0 |        9.17 |  7.34 |
| Gamma   |         0 |        7.92 |  6.34 |
| Delta   |         0 |        6.08 |  4.86 |
| Rho     |         0 |        4.58 |  3.66 |

** Comentários por grupo
*** Rho

- programa, $$ recebe dois valores, deveria ser um
- =decl_funcao=, o bloco não é conectado ao nó função
- bloco, comandos não são conectados ao bloco
- return, expressão não é conectada ao nó
- problemas similares aos acima nos demais itens
- ifelse: como diferenciar else opcional?
- na exp. par.: não há necessidade de se criar nó
- chamada de função: ausência do identificador

*** Epsilon

- Otimizações nos comandos iterativos e condicionais
  - Isto é interessante

*** Omega

- Falta o identificador do grupo nos arquivos
  - Com nome dos membros
- Codificação de precedência na própria gramática

*** Beta

- Simplificar as chamadas de =createAstItem=
  - Qual é a do =tree_make_node(NULL)=? Se inútil, remove.

*** Delta

- listaDeElementos: não conecta corretamente a lista de funções
- Qual o objetivo de fazer isso (no arquivo parser.y)? 
  #+BEGIN_EXAMPLE
  tableEntry* _entrada  = $2;
  tableEntry  entrada   = *_entrada;
  #+END_EXAMPLE
- blocoDeComandos: não conecta os múltiplos comandos
- Embora okay, código que cria o nó =if= faz potencialmente coisas
  desnecessária: por que criar um =comp_tree_t= além do nó ternário?
- em expressao, o tipo de nó parece não estar correto
- atribuição com campos deve ser binária também

*** Omicron

- Atribuição com vetor indexado deve ser binária
  - O mesmo pvale para atribuição para campo de tipo de usuário
- Por que um =AST_PLACE_HOLDER= para argumentos que são expressões?

*** Nu

- em Attribution, o nó deve ser binário quando no acesso de campos de
  tipo de usuário

*** Gamma

- Colocar nome dos membros nos arquivos fonte
- =body=, faltou encadear a lista de funções
  - Utilizando a própria árvore de análise ao invés de variáveis
    globais auxiliares: remover as variáveis globais =count= e
    =last_function=.
- Na lista de comandos (=simple_commands=), testa-se =$$=, mas a cabeça
  não é definida anteriormente (apenas na redução)

*** Psi

- =bloco_comandos=, quando não há nada, não há necessidade de se criar
  um nó AST vazio

* Avaliação da Etapa 4
** Quais testes?

No diretório de cada grupo, o arquivo =src/main.c= e o diretório =tests=
foram substituídos por aqueles oriundos do repositório de referência,
tomando-se por base o commit 476bceb.
** LOG dos testes (normal/valgrind)                                 :ATTACH:
:PROPERTIES:
:Attachments: e4.normal.log e4.valgrind.log
:ID:       e779b764-cade-404e-81ae-cfbd805d7509
:END:

Clique nos links:
- [[./data/e7/79b764-cade-404e-81ae-cfbd805d7509/e4.normal.log]]
- [[./data/e7/79b764-cade-404e-81ae-cfbd805d7509/e4.valgrind.log]]

#+name: e4.logtotable
#+begin_src shell :results table
echo "Grupo,E4,Obj"
cat data/e7/79b764-cade-404e-81ae-cfbd805d7509/e4.normal.log | grep -e passed -e failed | sed -e "s/% .*//" -e "s/|/, E4.normal, /"
cat data/e7/79b764-cade-404e-81ae-cfbd805d7509/e4.valgrind.log | grep -e passed -e failed | sed -e "s/% .*//" -e "s/|/, E4.valgrind, /"
#+end_src

#+RESULTS: e4.logtotable
| Grupo   | E4          | Obj |
| Alpha   | E4.normal   |  75 |
| Beta    | E4.normal   |  70 |
| Delta   | E4.normal   |  20 |
| Epsilon | E4.normal   |  70 |
| Gamma   | E4.normal   |  30 |
| Kappa   | E4.normal   |  20 |
| Lambda  | E4.normal   |  20 |
| Nu      | E4.normal   |  65 |
| Omega   | E4.normal   |  70 |
| Omicron | E4.normal   |  35 |
| Phi     | E4.normal   |  75 |
| Sigma   | E4.normal   |  70 |
| Alpha   | E4.valgrind |  10 |
| Beta    | E4.valgrind |  10 |
| Delta   | E4.valgrind |  10 |
| Epsilon | E4.valgrind |  10 |
| Gamma   | E4.valgrind |  10 |
| Kappa   | E4.valgrind |  30 |
| Lambda  | E4.valgrind |  10 |
| Nu      | E4.valgrind |  10 |
| Omega   | E4.valgrind |  10 |
| Omicron | E4.valgrind |  10 |
| Phi     | E4.valgrind |  10 |
| Sigma   | E4.valgrind |  10 |

#+name: e4.r
#+header: :var dep0=e4.logtotable
#+begin_src R :results table :session :exports both :colnames yes
library(tidyr)
dep0 %>%
    mutate(Obj = Obj/10) %>%
    spread(E4, Obj) -> e4.res;
#+end_src

#+RESULTS: e4.r
| Grupo   | E4.normal | E4.valgrind |
|---------+-----------+-------------|
| Alpha   |       7.5 |           1 |
| Beta    |         7 |           1 |
| Delta   |         2 |           1 |
| Epsilon |         7 |           1 |
| Gamma   |         3 |           1 |
| Kappa   |         2 |           3 |
| Lambda  |         2 |           1 |
| Nu      |       6.5 |           1 |
| Omega   |         7 |           1 |
| Omicron |       3.5 |           1 |
| Phi     |       7.5 |           1 |
| Sigma   |         7 |           1 |
** LOG dos de testes (normal/valgrind) resubmissões Omicron/Psi     :ATTACH:
:PROPERTIES:
:Attachments: e4.normal.4.log e4.valgrind.4.log
:ID:       4604171d-9a98-488c-a2dd-5486d591fbef
:END:

Clique nos links:
- [[./data/46/04171d-9a98-488c-a2dd-5486d591fbef/e4.normal.4.log]]
- [[./data/46/04171d-9a98-488c-a2dd-5486d591fbef/e4.valgrind.4.log]]

#+name: e4.logtotable2
#+begin_src shell :results table
echo "Grupo,E4,Obj"
cat data/46/04171d-9a98-488c-a2dd-5486d591fbef/e4.normal.4.log | grep -e passed -e failed | sed -e "s/% .*//" -e "s/|/, E4.normal, /"
cat data/46/04171d-9a98-488c-a2dd-5486d591fbef/e4.valgrind.4.log | grep -e passed -e failed | sed -e "s/% .*//" -e "s/|/, E4.valgrind, /"
#+end_src

#+RESULTS: e4.logtotable2
| Grupo   | E4          | Obj |
| Omicron | E4.normal   |  30 |
| Psi     | E4.normal   |  65 |
| Omicron | E4.valgrind |   0 |
| Psi     | E4.valgrind |  10 |

#+name: e4.r2
#+header: :var dep0=e4.logtotable2
#+begin_src R :results table :session :exports both :colnames yes
library(tidyr)
dep0 %>%
    mutate(Obj = Obj/10) %>%
    spread(E4, Obj) -> e4.res.2;
#+end_src

#+RESULTS: e4.r2
| Grupo   | E4.normal | E4.valgrind |
|---------+-----------+-------------|
| Omicron |         3 |           0 |
| Psi     |       6.5 |           1 |

** Subjetivo

#+name: e4.subjetiva.raw
| Grupo   | Subjetiva |
|---------+-----------|
| Delta   |         6 |
| Phi     |         9 |
| Gamma   |         9 |
| Lambda  |         9 |
| Nu      |         8 |
| Sigma   |         9 |
| Kappa   |       9.5 |
| Epsilon |        10 |
| Omega   |         9 |
| Omicron |         7 |
| Alpha   |         9 |
| Beta    |        10 |
| Psi     |         7 |

** Objetivo + Subjetivo + Final

#+header: :var dep0=e4.r
#+header: :var dep1=e4.r2
#+header: :var e4.sub=e4.subjetiva.raw
#+begin_src R :results table :session :exports output :colnames yes
e4.res %>%
    bind_rows(e4.res.2) %>%
    group_by(Grupo) %>%
    arrange(-E4.normal) %>%
    slice(1) %>%
    ungroup() %>%
    left_join(e4.sub) %>%
    mutate(E4.final = (E4.normal + Subjetiva) / 2)
#+end_src

#+RESULTS:
| Grupo   | E4.normal | E4.valgrind | Subjetiva | E4.final |
|---------+-----------+-------------+-----------+----------|
| Alpha   |         9 |           1 |         9 |        9 |
| Beta    |         8 |           1 |        10 |        9 |
| Delta   |         2 |           1 |         6 |        4 |
| Epsilon |         8 |           1 |        10 |        9 |
| Gamma   |         3 |           1 |         9 |        6 |
| Kappa   |         8 |           3 |       9.5 |     8.75 |
| Lambda  |        10 |           1 |         9 |      9.5 |
| Nu      |       7.5 |           1 |         8 |     7.75 |
| Omega   |       8.5 |           1 |         9 |     8.75 |
| Omicron |       4.5 |           1 |         7 |     5.75 |
| Phi     |       8.5 |           1 |         9 |     8.75 |
| Psi     |       6.5 |           1 |         7 |     6.75 |
| Sigma   |         8 |           1 |         9 |      8.5 |
** Comentários por grupo

Por fornecer.

* Avaliação da Etapa 5
** Quais testes?

No diretório de cada grupo, o diretório =tests= foi substituído por
aquele oriundo do repositório de referência, tomando-se por base o
commit 207376a.

** LOG dos testes (normal/valgrind)                                 :ATTACH:
:PROPERTIES:
:Attachments: e5.normal.log e5.valgrind.log
:ID:       33ac53f4-b269-48d1-8028-f7e497e8b9df
:END:

Clique nos links:
- [[./data/33/ac53f4-b269-48d1-8028-f7e497e8b9df/e5.normal.log]]
- [[./data/33/ac53f4-b269-48d1-8028-f7e497e8b9df/e5.valgrind.log]]

#+name: e5.logtotable
#+begin_src shell :results table
echo "Grupo,E5,Obj"
cat data/33/ac53f4-b269-48d1-8028-f7e497e8b9df/e5.normal.log | grep -e passed -e failed | sed -e "s/% .*//" -e "s/|/, E5.normal, /"
cat data/33/ac53f4-b269-48d1-8028-f7e497e8b9df/e5.valgrind.log | grep -e passed -e failed | sed -e "s/% .*//" -e "s/|/, E5.valgrind, /"
#+end_src

#+RESULTS: e5.logtotable
| Grupo   | E5          | Obj |
| Alpha   | E5.normal   |  89 |
| Beta    | E5.normal   |  16 |
| Delta   | E5.normal   |   0 |
| Epsilon | E5.normal   |  79 |
| Gamma   | E5.normal   |  21 |
| Kappa   | E5.normal   |  58 |
| Lambda  | E5.normal   |   0 |
| Nu      | E5.normal   |   0 |
| Omega   | E5.normal   |   0 |
| Omicron | E5.normal   |   0 |
| Phi     | E5.normal   |   0 |
| Sigma   | E5.normal   |   0 |
| Alpha   | E5.valgrind |   0 |
| Beta    | E5.valgrind |   0 |
| Delta   | E5.valgrind |   0 |
| Epsilon | E5.valgrind |   0 |
| Gamma   | E5.valgrind |   0 |
| Kappa   | E5.valgrind |   0 |
| Lambda  | E5.valgrind |   0 |
| Nu      | E5.valgrind |   0 |
| Omega   | E5.valgrind |   0 |
| Omicron | E5.valgrind |   0 |
| Phi     | E5.valgrind |   0 |
| Sigma   | E5.valgrind |   0 |

#+name: e5.r
#+header: :var dep0=e5.logtotable
#+begin_src R :results table :session :exports both :colnames yes
library(tidyr)
dep0 %>%
    mutate(Obj = Obj/10) %>%
    spread(E5, Obj) %>%
    arrange(-E5.normal) -> e5.res;
#+end_src

#+RESULTS: e5.r
| Grupo   | E5.normal | E5.valgrind |
|---------+-----------+-------------|
| Alpha   |       8.9 |           0 |
| Epsilon |       7.9 |           0 |
| Kappa   |       5.8 |           0 |
| Gamma   |       2.1 |           0 |
| Beta    |       1.6 |           0 |
| Delta   |         0 |           0 |
| Lambda  |         0 |           0 |
| Nu      |         0 |           0 |
| Omega   |         0 |           0 |
| Omicron |         0 |           0 |
| Phi     |         0 |           0 |
| Sigma   |         0 |           0 |
** Subjetivo

#+name: e5.subjetiva.raw
| Grupo   | Subjetiva |
|---------+-----------|
| Delta   |         3 |
| Phi     |         5 |
| Gamma   |         3 |
| Lambda  |         5 |
| Nu      |         9 |
| Sigma   |         7 |
| Kappa   |         9 |
| Epsilon |        10 |
| Omega   |       7.5 |
| Omicron |         5 |
| Alpha   |        10 |
| Beta    |         7 |

** Objetivo + Subjetivo + Final

#+header: :var dep0=e5.r
#+header: :var e5.sub=e5.subjetiva.raw
#+begin_src R :results table :session :exports output :colnames yes
e5.res %>%
    group_by(Grupo) %>%
    arrange(-E5.normal) %>%
    slice(1) %>%
    ungroup() %>%
    left_join(e5.sub) %>%
    mutate(E5.final = (E5.normal + Subjetiva) / 2)
#+end_src

#+RESULTS:
| Grupo   | E5.normal | E5.valgrind | Subjetiva | E5.final |
|---------+-----------+-------------+-----------+----------|
| Alpha   |        10 |           0 |        10 |       10 |
| Beta    |        10 |           0 |         7 |      8.5 |
| Delta   |         0 |           0 |         3 |      1.5 |
| Epsilon |        10 |           0 |        10 |       10 |
| Gamma   |        10 |           0 |         3 |      6.5 |
| Kappa   |        10 |           0 |         9 |      9.5 |
| Lambda  |        10 |           0 |         5 |      7.5 |
| Nu      |        10 |           0 |         9 |      9.5 |
| Omega   |        10 |           0 |       7.5 |     8.75 |
| Omicron |        10 |           0 |         5 |      7.5 |
| Phi     |         0 |           0 |         5 |      2.5 |
| Sigma   |         0 |           0 |         7 |      3.5 |
** Comentários por grupo

Por fornecer.
* Avaliação da Etapa 6
** Quais testes?

No diretório de cada grupo, o diretório =tests= foi substituído por
aquele oriundo do repositório de referência, tomando-se por base o
commit c500d9b.

** LOG dos testes (apenas normal)                                   :ATTACH:
:PROPERTIES:
:Attachments: e6.normal.log
:ID:       31656d7e-6a31-4fab-929e-eb3412ebec6d
:END:

Clique nos links:
- [[./data/31/656d7e-6a31-4fab-929e-eb3412ebec6d/e6.normal.log]]

#+name: e6.logtotable
#+begin_src shell :results table
echo "Grupo,E6,Obj"
cat data/31/656d7e-6a31-4fab-929e-eb3412ebec6d/e6.normal.log | grep -e passed -e failed | sed -e "s/% .*//" -e "s/|/, E6.normal, /"
#+end_src

#+RESULTS: e6.logtotable
| Grupo   | E6        | Obj |
| Alpha   | E6.normal |   0 |
| Epsilon | E6.normal |   0 |
| Gamma   | E6.normal |   0 |
| Kappa   | E6.normal |   0 |
| Lambda  | E6.normal |   0 |
| Omicron | E6.normal |   0 |
| Sigma   | E6.normal |   0 |

#+name: e6.r
#+header: :var dep0=e6.logtotable
#+begin_src R :results table :session :exports both :colnames yes
library(tidyr)
dep0 %>%
    mutate(Obj = Obj/10) %>%
    spread(E6, Obj) %>%
    arrange(-E6.normal) -> e6.res;
#+end_src

#+RESULTS: e6.r
| Grupo   | E6.normal |
|---------+-----------|
| Alpha   |         0 |
| Epsilon |         0 |
| Gamma   |         0 |
| Kappa   |         0 |
| Lambda  |         0 |
| Omicron |         0 |
| Sigma   |         0 |

